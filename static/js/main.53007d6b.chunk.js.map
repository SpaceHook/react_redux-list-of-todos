{"version":3,"sources":["store/loading.ts","store/selectedTodo.ts","store/todos.ts","store/index.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["actions","type","todo","payload","todos","rootReducer","combineReducers","loading","action","selectors","state","store","createStore","applyMiddleware","thunk","TodoList","selectedTodo","dispatch","useDispatch","className","map","classNames","id","completed","title","onClick","todoActions","TodoFilter","query","setQuery","status","setStatus","value","onChange","event","target","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","visibleModal","onClose","useState","user","setUser","useEffect","userId","person","href","email","name","App","isLoading","useSelector","visibleTodos","filter","toLowerCase","includes","todoStatus","filterStatus","loadingActions","todosFromServer","todosActions","finally","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.53007d6b.chunk.js","sourcesContent":["type StartLoadingAction = {\n  type: 'SET_START',\n};\n\ntype FinishLoadingAction = {\n  type: 'SET_FINISH',\n};\n\nexport type LoadingAction = StartLoadingAction | FinishLoadingAction;\n\nexport const loadingReducer = (\n  loading = false,\n  action: LoadingAction,\n) => {\n  switch (action.type) {\n    case 'SET_START':\n      return true;\n    case 'SET_FINISH':\n      return false;\n    default:\n      return loading;\n  }\n};\n\nexport const actions = {\n  startLoading: (): StartLoadingAction => ({ type: 'SET_START' }),\n  finishLoading: (): FinishLoadingAction => ({ type: 'SET_FINISH' }),\n};\n","import { Todo } from '../types/Todo';\n\ntype SetCurentTodoAction = {\n  type: 'SET_TODO',\n  payload: Todo | null\n};\n\nexport type TodosAction = SetCurentTodoAction;\n\nexport const todoReducer = (todo: Todo | null = null, action: TodosAction) => {\n  switch (action.type) {\n    case 'SET_TODO':\n      return action.payload;\n    default:\n      return todo;\n  }\n};\n\nexport const actions = {\n  setTodo: (todo: Todo | null): SetCurentTodoAction => ({\n    type: 'SET_TODO',\n    payload: todo,\n  }),\n};\n","import { Todo } from '../types/Todo';\n\ntype SetTodosAction = {\n  type: 'SET_TODOS',\n  payload: Todo[]\n};\n\nexport type TodosAction = SetTodosAction;\n\nexport const todosReducer = (todos: Todo[] = [], action: TodosAction) => {\n  switch (action.type) {\n    case 'SET_TODOS':\n      return action.payload;\n    default:\n      return todos;\n  }\n};\n\nexport const actions = {\n  setTodos: (todos: Todo[]): SetTodosAction => ({\n    type: 'SET_TODOS',\n    payload: todos,\n  }),\n};\n","import { applyMiddleware, combineReducers, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport { loadingReducer } from './loading';\nimport { todoReducer } from './selectedTodo';\nimport { todosReducer } from './todos';\n\nconst rootReducer = combineReducers({\n  loading: loadingReducer,\n  todos: todosReducer,\n  todo: todoReducer,\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n\nexport const selectors = {\n  loading: (state: RootState) => state.loading,\n\n  todos: (state: RootState) => state.todos,\n\n  todo: (state: RootState) => state.todo,\n};\n\nexport const store = createStore(rootReducer, applyMiddleware(thunk));\n","import classNames from 'classnames';\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { actions as todoActions } from '../../store/selectedTodo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  selectedTodo: Todo | null,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodo,\n}) => {\n  const dispatch = useDispatch();\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <tr\n            data-cy=\"todo\"\n            className={classNames({\n              'has-background-info-light': selectedTodo?.id === todo.id,\n            })}\n            key={todo.id}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            {\n              todo.completed\n                ? (\n                  <td className=\"is-vcentered\">\n                    <span className=\"icon\" data-cy=\"iconCompleted\">\n                      <i className=\"fas fa-check\" />\n                    </span>\n                  </td>\n                ) : (\n                  <td className=\"is-vcentered\" />\n                )\n            }\n            <td className=\"is-vcentered is-expanded\">\n              <p className={classNames(\n                todo.completed\n                  ? 'has-text-success'\n                  : 'has-text-danger',\n              )}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              {selectedTodo?.id === todo.id\n                ? (\n                  <button\n                    data-cy=\"selectButton\"\n                    className=\"button is-link\"\n                    type=\"button\"\n                    onClick={() => dispatch(todoActions.setTodo(null))}\n                  >\n                    <span className=\"icon\">\n                      <i className=\"far fa-eye-slash\" />\n                    </span>\n                  </button>\n                )\n                : (\n                  <button\n                    data-cy=\"selectButton\"\n                    className=\"button\"\n                    type=\"button\"\n                    onClick={() => dispatch(todoActions.setTodo(todo))}\n                  >\n                    <span className=\"icon\">\n                      <i className=\"far fa-eye\" />\n                    </span>\n                  </button>\n                )}\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\n\ntype Props = {\n  query: string,\n  setQuery: (query: string) => void,\n  status: string,\n  setStatus: (status: string) => void\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  query,\n  setQuery,\n  status,\n  setStatus,\n}) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={status}\n            onChange={(event) => {\n              setStatus(event.target.value);\n            }}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(event) => {\n            setQuery(event.target.value);\n          }}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {query && (\n            // eslint-disable-next-line jsx-a11y/control-has-associated-label\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setQuery('')}\n            />\n          )}\n        </span>\n\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(1000)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  todo: Todo,\n  onClose: () => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({ todo, onClose: visibleModal }) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    getUser(todo.userId).then(person => setUser(person));\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={visibleModal}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {\n                todo.completed\n                  ? (\n                    <strong className=\"has-text-success\">Done</strong>\n                  )\n                  : (\n                    <strong className=\"has-text-danger\">Planned</strong>\n                  )\n              }\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\nimport { TodoModal } from './components/TodoModal';\nimport { selectors } from './store';\nimport { actions as loadingActions } from './store/loading';\nimport { actions as todosActions } from './store/todos';\nimport { actions as todoActions } from './store/selectedTodo';\n\nexport const App: React.FC = () => {\n  const [query, setQuery] = useState('');\n  const [status, setStatus] = useState('');\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectors.loading);\n  const todos = useSelector(selectors.todos);\n  const selectedTodo = useSelector(selectors.todo);\n\n  const filterInput = (todo: Todo) => todo.title.toLowerCase().includes(query.toLowerCase());\n  const filterStatus = (todo: Todo, todoStatus: string) => {\n    switch (todoStatus) {\n      case 'active':\n        return !todo.completed;\n      case 'completed':\n        return todo.completed;\n      default:\n        return todo;\n    }\n  };\n\n  const visibleTodos = todos\n    .filter(filterInput)\n    .filter((todo) => filterStatus(todo, status));\n\n  useEffect(() => {\n    dispatch(loadingActions.startLoading());\n    const loadTodos = () => {\n      getTodos().then(todosFromServer => {\n        dispatch(todosActions.setTodos(todosFromServer));\n      }).finally(() => dispatch(loadingActions.finishLoading()));\n    };\n\n    loadTodos();\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                setQuery={setQuery}\n                status={status}\n                setStatus={setStatus}\n              />\n            </div>\n\n            <div className=\"block\">\n              {\n                isLoading\n                  ? <Loader />\n                  : (\n                    <>\n                      <TodoList\n                        todos={visibleTodos}\n                        selectedTodo={selectedTodo}\n                      />\n                    </>\n                  )\n              }\n            </div>\n          </div>\n        </div>\n        {selectedTodo && (\n          <TodoModal\n            todo={selectedTodo}\n            onClose={() => {\n              dispatch(todoActions.setTodo(null));\n            }}\n          />\n        )}\n      </div>\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { store } from './store';\nimport { App } from './App';\n\n// Just a convenient component with all the wrappers for the `App`\n// The Router component (if you use it) should be placed inside the Provider\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}